# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and 
# D = |Pk − Pj| is minimised; what is the value of D?

result = 10000000
pentagonal_numbers = []

(1..3000).each do |number|
	pentagonal_numbers << (((number * 3) - 1) * number) / 2
end

pentagonal_numbers.each do |pent_a|
	pentagonal_numbers.each do |pent_b|
		difference = (pent_a - pent_b).abs
		sum = pent_a + pent_b
		if (
			difference != 0 and
			pentagonal_numbers.include?(difference) and
			pentagonal_numbers.include?(sum) and
			difference < result
		)
			result = difference
		end
	end
end

# This could be run in half the time, because it's iterating over the whole
# array of pentagonal numbers twice. Also, I just took it on faith that the answer would
# involve only numbers below the 3000th pentagonal number.